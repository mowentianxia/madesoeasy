apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def sign_pwd = properties.getProperty("sign.password")
def sign_alias = properties.getProperty("sign.alias")
def sign_alias_pwd = properties.getProperty("sign.aliaspassword")

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.kk.imageeditor"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 3200
        versionName "3.1.0"
        buildConfigField "String","DEFAULT_STYLE",'"yugioh-9-cn.xml"'
        vectorDrawables.useSupportLibrary = true
        android {
            defaultConfig {
                ndk {
                    abiFilters "armeabi-v7a", "x86"
                }
            }
        }
    }
    sourceSets {
        main {
            assets.srcDirs = ['assets', 'src/main/assets']
            java.srcDirs = ['src/main/java', '../libxml2object/xml2object/src/main/java']
        }
    }
    signingConfigs {
        myConfig {
            storeFile file("msoe.key")
            storePassword sign_pwd
            keyAlias sign_alias
            keyPassword sign_alias_pwd
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            signingConfig signingConfigs.myConfig
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.myConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                String name = outputFile.name;
                def fileName =  "MadeSoEasy" + variant.getVersionName() + name.substring(name.lastIndexOf("-"), name.length());
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:support-vector-drawable:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'org.jdeferred:jdeferred-android-aar:1.2.4'
    compile 'com.github.chrisbanes.photoview:library:1.2.4'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    testCompile 'junit:junit:4.12'
    testCompile 'xmlpull:xmlpull:1.1.3.1'
    testCompile 'net.sf.kxml:kxml2:2.3.0'
    compile project(':filedialog')
    compile project(':fittextview')
}
